version: '3.9'

volumes:
  local_postgres_data:
  local_migration_data:

services:
  migrate:
    image: $IMAGE_TAG:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      - DEBUG=$DEBUG
      - SECRET_KEY=$SECRET_KEY
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - SOCIAL_AUTH_VK_OAUTH2_SECRET=$SOCIAL_AUTH_VK_OAUTH2_SECRET
      - SOCIAL_AUTH_VK_OAUTH2_KEY=$SOCIAL_AUTH_VK_OAUTH2_KEY
      - DB_HOST=db
      - DB_PORT=5432
      - TG_BOT_KEY=$TG_BOT_KEY
    command: python todolist/manage.py migrate
    volumes:
      - ./local_migration_data:/var/lib/postgresql/data/migrations/
    depends_on:
      db:
        condition: service_healthy
    restart: "always"

  api:
    image: $IMAGE_TAG:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      - DEBUG=$DEBUG
      - SECRET_KEY=$SECRET_KEY
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - SOCIAL_AUTH_VK_OAUTH2_SECRET=$SOCIAL_AUTH_VK_OAUTH2_SECRET
      - SOCIAL_AUTH_VK_OAUTH2_KEY=$SOCIAL_AUTH_VK_OAUTH2_KEY
      - DB_HOST=db
      - DB_PORT=5432
      - TG_BOT_KEY=$TG_BOT_KEY
    command: python todolist/manage.py runserver 0.0.0.0:8000
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    restart: "always"

  db:
    image: postgres:latest
    volumes:
      - ./local_postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - DB_HOST=db
      - DB_PORT=5432
    ports:
      - "5432:5432"
    restart: "always"
    healthcheck:
      test: /usr/bin/pg_isready
      interval: 5s
      timeout: 5s
      retries: 5

  front:
    image: sermalenk/skypro-front:lesson-38
    depends_on:
      - api
    ports:
      - "80:80"
    restart: "always"

  bot:
    build: .
    environment:
      - DEBUG=$DEBUG
      - SECRET_KEY=$SECRET_KEY
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - SOCIAL_AUTH_VK_OAUTH2_SECRET=$SOCIAL_AUTH_VK_OAUTH2_SECRET
      - SOCIAL_AUTH_VK_OAUTH2_KEY=$SOCIAL_AUTH_VK_OAUTH2_KEY
      - DB_HOST=db
      - DB_PORT=5432
      - TG_BOT_KEY=$TG_BOT_KEY
    command: python todolist/manage.py runbot
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
      api:
        condition: service_started